spring.application.name=Logistics API

spring.datasource.url=jdbc:h2:/data/logistics_db;AUTO_SERVER=TRUE;
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=${USER_DB:sa}
spring.datasource.password=${PASSWORD_DB:password}
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
spring.jpa.hibernate.ddl-auto=create-drop

spring.kafka.bootstrap-servers=kafka:29092
spring.kafka.consumer.group-id=logistics-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.bootstrap-servers=kafka:29092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

spring.cloud.stream.bindings.orderCreatedProcessor-in-0.destination=orders.created
spring.cloud.stream.bindings.orderCreatedProcessor-in-0.group=logistics-group
spring.cloud.stream.bindings.orderDeliveredProcessor-in-0.group=orders-group
spring.cloud.stream.bindings.orderDeliveredProcessor-in-0.destination=orders.delivered
spring.cloud.stream.kafka.binder.brokers=kafka:29092
spring.cloud.stream.bindings.orderCreatedProcessor-in-0.content-type=application/json
spring.cloud.stream.kafka.bindings.processOrder-in-0.consumer.configuration.spring.json.trusted.packages=*

logging.level.org.apache.kafka=WARN
logging.level.org.springframework.kafka=WARN
logging.level.org.apache.kafka.clients.producer.ProducerConfig=WARN
logging.level.com.zaxxer.hikari=WARN
logging.level.org.hibernate=WARN

spring.kafka.producer.retries=3

server.servlet.context-path=/api/logisticsmanagement


